[{"/home/devansh/react-apps/fyle-app/src/index.js":"1","/home/devansh/react-apps/fyle-app/src/App.js":"2","/home/devansh/react-apps/fyle-app/src/reportWebVitals.js":"3","/home/devansh/react-apps/100ms-app/src/index.js":"4","/home/devansh/react-apps/100ms-app/src/reportWebVitals.js":"5","/home/devansh/react-apps/100ms-app/src/App.js":"6","/home/devansh/react-apps/100ms-app/src/Character.js":"7","/home/devansh/react-apps/100ms-app/src/Home.js":"8"},{"size":565,"mtime":1608543786381,"results":"9","hashOfConfig":"10"},{"size":10181,"mtime":1608588352990,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608537201416,"results":"12","hashOfConfig":"10"},{"size":565,"mtime":1608637424308,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1608637424308,"results":"15","hashOfConfig":"14"},{"size":614,"mtime":1608658889564,"results":"16","hashOfConfig":"14"},{"size":5071,"mtime":1608659681248,"results":"17","hashOfConfig":"14"},{"size":3855,"mtime":1608660805117,"results":"18","hashOfConfig":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"l81clc",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"fhhqs1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/devansh/react-apps/fyle-app/src/index.js",[],["38","39"],"/home/devansh/react-apps/fyle-app/src/App.js",["40","41","42"],"/home/devansh/react-apps/fyle-app/src/reportWebVitals.js",[],"/home/devansh/react-apps/100ms-app/src/index.js",[],["43","44"],"/home/devansh/react-apps/100ms-app/src/reportWebVitals.js",[],"/home/devansh/react-apps/100ms-app/src/App.js",[],"/home/devansh/react-apps/100ms-app/src/Character.js",["45","46","47","48"],"import React, { Component, useCallback } from \"react\";\nimport Table from 'react-bootstrap/Table';\nimport xtypes from 'xtypejs';\n\nclass Character extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            details: [],\n            img_src: '',\n            quotes: []\n        };\n      }\n    \n    componentDidMount () {\n          const apiUrl = `https://www.breakingbadapi.com/api/characters/${this.props.location.state.id}`\n            fetch(apiUrl)\n          .then((response) => response.json())\n          .then((data) => this.setState({details: data, img_src: data[0].img\n          }));\n          const author = this.props.location.state.name.replace(/ /g, '+');\n          const apiUrl2 = `https://www.breakingbadapi.com/api/quote?author=${author}`\n          fetch(apiUrl2)\n          .then((response) => response.json())\n          .then((data) => this.setState({quotes: data,\n          }));\n    }\n\n    generateData = (data) => {\n        const newData = Object.keys(data).reduce((result, currentKey) => {\n          if (typeof data[currentKey] === 'string' || data[currentKey] instanceof String) {\n            result.push(currentKey);\n          } else {\n            const nested = this.generateData(data[currentKey]);\n            result.push(...nested);\n          }\n          return result;\n        }, []);\n        return newData;\n    };\n\n    renderImage = () => {\n        const newItems = this.state.details\n        var data = newItems[0]\n        var img_scr \n        for (var key in data) \n        { if (!data.hasOwnProperty(key))\n            { continue; } \n            if(key == \"img\")\n                img_scr = data[key]\n        }\n        console.log(img_scr)\n        return (\n            <div class=\"text-center\">\n            <img src={`${img_scr}`} class=\"img-fluid\" alt=\"...\"/>\n            </div>\n            );\n    }\n\n    renderSeasons = () => {\n        const newItems = this.state.details\n        var data = newItems[0]\n        var seasons\n        for (var key in data) \n        { if (!data.hasOwnProperty(key))\n            { continue; } \n            if(key == \"appearance\")\n                seasons = data[key]\n        }\n        console.log(xtypes(seasons))\n        return (\n            <div>\n            {newItems.map((item) => (\n                    <div class=\"list-group list-group-horizontal-xl align-items-center\">\n                    {item.appearance.map((x) => <li class=\"list-group-item list-group-item-dark text-center flex-fill \">{x}</li>)}\n                    </div>\n                ))}\n            </div>\n            \n        );\n    }\n\n    renderItems = () => {\n        const newItems = this.state.details\n        var len\n        for (var key in newItems) \n        { if (!newItems.hasOwnProperty(key))\n            { continue; } \n            if(key == \"appearance\")\n                len = newItems[key].length\n        }\n        console.log(len)\n        return (\n            <Table responsive striped bordered hover variant=\"dark\">\n            <thead>\n                <tr>\n                <th>OCCUPATION</th>\n                <th>DATE OF BIRTH</th>\n                <th>STATUS</th>\n                <th>NICKNAME</th>\n                <th>ACTOR NAME</th>\n                </tr>\n            </thead>\n            <tbody>\n                {newItems.map((item) => (\n                    <tr>\n                    <td>{item.occupation}</td>\n                    <td>{item.birthday}</td>\n                    <td>{item.status}</td>\n                    <td>{item.nickname}</td>\n                    <td>{item.portrayed}</td>\n                    </tr>\n                ))}\n            </tbody>\n            </Table>\n        );\n        };\n    \n    renderQuotes = () => {\n        const newItems = this.state.quotes\n        return (\n            <Table responsive striped bordered hover variant=\"dark\">\n            <tbody>\n                {newItems.map((item) => (\n                    <tr>\n                    <td class=\"text-center\">{item.quote}</td>\n                    </tr>\n                ))}\n            </tbody>\n            </Table>\n        );\n    };\n\n    render() {\n        return (\n            <main className=\"content\">\n            <h1 className=\"text-white text-uppercase text-center my-4\">{this.props.location.state.name}</h1>\n            <div className=\"row \">\n              <div className=\"col-md-6 col-sm-10 mx-auto p-0 align-items-center\">\n              <div className=\"align-items-center\">\n                    {this.renderImage()}\n                </div>\n                <div className=\"card p-3\">\n                    <ul className=\"list-group list-group-flush\">\n                    {this.renderItems()}\n                    </ul>\n                    <h2 className=\"text-black text-uppercase text-center my-4\">Seasons</h2>\n                    {this.renderSeasons()}\n                    <h2 className=\"text-black text-uppercase text-center my-4\">Quotes</h2>\n                    {this.renderQuotes()}\n                </div>\n              </div>\n            </div>\n          </main>\n        );\n    }\n}\n\nexport default Character;","/home/devansh/react-apps/100ms-app/src/Home.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":13},{"ruleId":"57","severity":1,"message":"58","line":91,"column":46,"nodeType":"59","messageId":"60","endLine":91,"endColumn":48},{"ruleId":"57","severity":1,"message":"58","line":131,"column":46,"nodeType":"59","messageId":"60","endLine":131,"endColumn":48},{"ruleId":"49","replacedBy":"61"},{"ruleId":"51","replacedBy":"62"},{"ruleId":"53","severity":1,"message":"63","line":1,"column":28,"nodeType":"55","messageId":"56","endLine":1,"endColumn":39},{"ruleId":"57","severity":1,"message":"58","line":49,"column":20,"nodeType":"59","messageId":"60","endLine":49,"endColumn":22},{"ruleId":"57","severity":1,"message":"58","line":67,"column":20,"nodeType":"59","messageId":"60","endLine":67,"endColumn":22},{"ruleId":"57","severity":1,"message":"58","line":89,"column":20,"nodeType":"59","messageId":"60","endLine":89,"endColumn":22},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'xtype' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["64"],["65"],"'useCallback' is defined but never used.","no-global-assign","no-unsafe-negation"]